# `tmux a` opens a new session if not exists. (this setting should be at top!)
#new-session

#setenv LANG en_US.UTF-8

# prefix key setting
# set-option -g prefix 'C-\'
# bind-key 'C-\' send-prefix
# unbind-key C-b

# move pane
# bind-key b select-pane -L
# bind-key n select-pane -D  # change to next window とかぶっている
# bind-key p select-pane -U
# bind-key f select-pane -R
bind-key C-b select-pane -L
bind-key C-n select-pane -D
bind-key C-p select-pane -U
bind-key C-f select-pane -R

# pane split
bind-key | split-window -h
bind-key - split-window -v

# visual bells
set-window-option -g monitor-activity on
set-option -g visual-activity on

# set inactive/active window styles
set-option -g window-active-style 'fg=default,bg=#000000'
set-option -g window-style 'fg=default,bg=#333333'

# pagenation
bind-key -T copy-mode 'v' send-keys -X page-down
bind-key -T copy-mode '^' send-keys -X page-up

# Explicit `Enter` key fires copy the selection
unbind -T copy-mode MouseDragEnd1Pane
bind-key -T copy-mode v send-keys -X begin-selection
bind-key -T copy-mode Enter send-keys -X copy-pipe "tmux copy-buffer"

# Reload config file
bind-key r source-file ~/.tmux.conf\; display-message "[tmux] ~/.tmux.conf reloaded!"
bind-key C-r source-file ~/.tmux.conf\; display-message "[tmux] ~/.tmux.conf reloaded!"

# mouse settings
# set-option -g mouse on

# clipboard integration
# brew install reattach-to-user-namespace
# iTerm2 -> Preferences -> General -> Application in terminal may access clipboard
set-option -s set-clipboard on

# show seconds on status bar's clock
set -g status-interval 1
set -g status-right "#H %H:%M:%S"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# symlink SSH_AUTH_SOCK to keep ssh agent's socket when the connection is terminated
# set-environment -g 'SSH_AUTH_SOCK' ~/.ssh/ssh_auth_sock
