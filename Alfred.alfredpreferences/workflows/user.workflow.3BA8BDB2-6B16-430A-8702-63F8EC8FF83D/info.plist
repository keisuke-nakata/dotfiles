<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.alfredapp.vero.gettingstarted.fallbacksearches</string>
	<key>connections</key>
	<dict>
		<key>4172F6CD-CD6B-42D3-9AB4-19C2976EEB19</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>CBD76A3F-B465-46FE-B865-53F7000575EF</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vero Pepperrell</string>
	<key>description</key>
	<string>A Fallback Search trigger can be used in Alfred's fallback search results to get custom results</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Search Dictionary.app for '{query}'</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>text</key>
				<string>Search Dictionary for '{query}'</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.fallback</string>
			<key>uid</key>
			<string>4172F6CD-CD6B-42D3-9AB4-19C2976EEB19</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string>dict://{query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>CBD76A3F-B465-46FE-B865-53F7000575EF</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>When Alfred doesn't find a matching result on your Mac, he shows you a few Fallback Searches.

Want to show your own search alternative in Alfred's Fallback searches? This workflow adds a Dictionary Search using OS X's own Dictionary.

To do this, a Fallback Search trigger is connected to an Open URL action. In the Open URL action, we call the OS X Dictionary with dict://{query} so that it opens the typed query.</string>
	<key>uidata</key>
	<dict>
		<key>4172F6CD-CD6B-42D3-9AB4-19C2976EEB19</key>
		<dict>
			<key>note</key>
			<string>1. Right-click the canvas and add Triggers &gt; Fallback Search.

2. Add the title you want to show for your Fallback Search.</string>
			<key>xpos</key>
			<integer>50</integer>
			<key>ypos</key>
			<integer>50</integer>
		</dict>
		<key>CBD76A3F-B465-46FE-B865-53F7000575EF</key>
		<dict>
			<key>note</key>
			<string>3. Connect your Fallback Search trigger to an Open URL action.

4. Set the URL to the one you want to open. In this case, I'm using the URL for the Dictionary, which is dict://{query}. You can use a web search, custom search or workflow action.

5. In Features &gt; Default Results, click on "Set up fallback results" where you can now add this as a Fallback search!</string>
			<key>xpos</key>
			<integer>340</integer>
			<key>ypos</key>
			<integer>50</integer>
		</dict>
	</dict>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>1.0</string>
	<key>webaddress</key>
	<string>https://www.alfredapp.com</string>
</dict>
</plist>
